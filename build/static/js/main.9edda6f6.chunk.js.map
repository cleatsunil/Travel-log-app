{"version":3,"sources":["api.js","LogEntryForm.js","App.js","index.js"],"names":["API_URL","window","location","hostname","listLogEntries","a","response","fetch","json","createLogEntry","entry","apikey","apiKey","method","headers","body","JSON","stringify","ok","error","Error","message","LogEntryForm","onClose","useForm","register","handleSubmit","useState","loading","setLoading","setError","onSubmit","data","latitude","longitude","created","console","log","className","htmlfor","type","name","requried","ref","htmlFor","rows","disabled","App","logEntries","setLogEntries","showPopup","setShowPopup","addEntryLocation","setAddEntryLocation","width","height","zoom","viewport","setViewport","getEntries","useEffect","mapStyle","mapboxApiAccessToken","process","onViewportChange","nextViewport","onDblClick","event","lngLat","map","key","_id","onClick","style","src","alt","dynamicPosition","closeButton","closeOnClick","anchor","title","comments","Date","visitedOn","toLocaleDateString","image","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9edda6f6.chunk.js","sourcesContent":["const API_URL =\r\n  window.location.hostname === 'localhost'\r\n    ? 'https://localhost:1337'\r\n    : 'https://cleat-travel-log-app.herokuapp.com/';\r\n\r\nexport async function listLogEntries() {\r\n  const response = fetch(`${API_URL}/api/logs`);\r\n  return (await response).json();\r\n}\r\n\r\nexport async function createLogEntry(entry) {\r\n  const apikey = entry.apiKey;\r\n  delete entry.apiKey;\r\n  const response = await fetch(`${API_URL}/api/logs`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-API-KEY': apikey\r\n    },\r\n    body: JSON.stringify(entry)\r\n  });\r\n  const json = await response.json();\r\n  if (response.ok) {\r\n    return json;\r\n  }\r\n  const error = new Error(json.message);\r\n  error.response = json;\r\n  throw error;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { createLogEntry } from './api';\r\n\r\nconst LogEntryForm = ({ location, onClose }) => {\r\n  const { register, handleSubmit } = useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      data.latitude = location.latitude;\r\n      data.longitude = location.longitude;\r\n      //console.log(data);\r\n      const created = await createLogEntry(data);\r\n      console.log(created);\r\n      onClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n\r\n    //console.log(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"entry-form\">\r\n      {error ? <h3 className=\"error\">{error}</h3> : null}\r\n      <label htmlfor=\"apiKey\">API KEY</label>\r\n      <input type=\"password\" name=\"apiKey\" requried ref={register} />\r\n      <label htmlFor=\"title\">Title</label>\r\n      <input name=\"title\" requried ref={register} />\r\n      <label htmlFor=\"comments\">Comments</label>\r\n      <textarea name=\"comments\" rows={3} ref={register}></textarea>\r\n      <label htmlFor=\"image\">Image</label>\r\n      <input name=\"image\" ref={register} />\r\n      <label htmlFor=\"visitedOn\">VisitedDate</label>\r\n      <input name=\"visitedOn\" type=\"date\" ref={register} />\r\n      <button disabled={loading}>\r\n        {' '}\r\n        {loading ? 'Loading...' : 'Create Entry'}{' '}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LogEntryForm;\r\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport LogEntryform from './LogEntryForm';\nimport { listLogEntries } from './api';\n\nconst App = () => {\n  const [logEntries, setLogEntries] = useState([]);\n  const [showPopup, setShowPopup] = useState({});\n  const [addEntryLocation, setAddEntryLocation] = useState(null);\n\n  const [viewport, setViewport] = useState({\n    width: '100vw',\n    height: '100vh',\n    latitude: 18.922,\n    longitude: 72.8347,\n    zoom: 6\n  });\n  const getEntries = async () => {\n    const logEntries = await listLogEntries();\n    setLogEntries(logEntries);\n  };\n  useEffect(() => {\n    getEntries();\n  }, []);\n\n  const showAddMarkerPopup = (event) => {\n    const [longitude, latitude] = event.lngLat;\n    setAddEntryLocation({\n      latitude,\n      longitude\n    });\n  };\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapStyle=\"mapbox://styles/sunilgeorgev/ckdsobltt14ya19uhaywi563e\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\n      onDblClick={showAddMarkerPopup}\n    >\n      {' '}\n      {logEntries.map((entry) => (\n        <React.Fragment key={entry._id}>\n          <Marker latitude={entry.latitude} longitude={entry.longitude}>\n            <div onClick={() => setShowPopup({ [entry._id]: true })}>\n              <img\n                className=\"marker\"\n                style={{\n                  height: `${6 * viewport.zoom}px`,\n                  width: `${6 * viewport.zoom}px`\n                }}\n                src=\"https://i.imgur.com/y0G5YTX.png\"\n                alt=\"marker\"\n              />\n            </div>\n          </Marker>\n          {showPopup[entry._id] ? (\n            <Popup\n              latitude={entry.latitude}\n              longitude={entry.longitude}\n              dynamicPosition={true}\n              closeButton={true}\n              closeOnClick={false}\n              onClose={() => setShowPopup({})}\n              anchor=\"top\"\n            >\n              <div className=\"popup\">\n                <h3>{entry.title}</h3>\n                <p>{entry.comments}</p>\n                <small>\n                  Visited On :{new Date(entry.visitedOn).toLocaleDateString()}\n                </small>\n                {entry.image && <img src={entry.image} alt={entry.title} />}\n              </div>\n            </Popup>\n          ) : null}\n        </React.Fragment>\n      ))}\n      {addEntryLocation ? (\n        <>\n          <Marker\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n          >\n            <div>\n              <img\n                className=\"marker\"\n                style={{\n                  height: `${6 * viewport.zoom}px`,\n                  width: `${6 * viewport.zoom}px`\n                }}\n                src=\"https://i.imgur.com/y0G5YTX.png\"\n                //src=\"https://t3.ftcdn.net/jpg/02/06/16/58/240_F_206165896_lVGZ6RzucXCprcm61BAXLPRbTxXwY3K9.jpg\"\n                alt=\"marker\"\n              />\n            </div>\n          </Marker>\n\n          <Popup\n            latitude={addEntryLocation.latitude}\n            longitude={addEntryLocation.longitude}\n            dynamicPosition={true}\n            closeButton={true}\n            closeOnClick={false}\n            onClose={() => setAddEntryLocation(null)}\n            anchor=\"top\"\n          >\n            <div className=\"popup\">\n              <LogEntryform\n                onClose={() => {\n                  setAddEntryLocation(null);\n                  getEntries();\n                }}\n                location={addEntryLocation}\n              />\n            </div>\n          </Popup>\n        </>\n      ) : null}\n    </ReactMapGL>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}